server.port=${SERVER_PORT}
server.servlet.context-path=${SERVER_SERVLET_CONTEXT_PATH}

spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=${DB_DRIVER_CLASS_NAME}

spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT}

spring.flyway.enabled=${SPRING_FLYWAY_ENABLED}
spring.flyway.baseline-on-migrate=${SPRING_FLYWAY_BASELINE_ON_MIGRATE}
spring.flyway.locations=${SPRING_FLYWAY_LOCATIONS}

jwt.secret-key=${JWT_SECRET_KEY}
jwt.algorithm=${JWT_ALGORITHM}
jwt.expiration-seconds=${JWT_EXPIRATION_SECONDS}
jwt.issuer=${JWT_ISSUER}
jwt.audience=${JWT_AUDIENCE}

logging.level.org.springframework.web=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB}
logging.level.org.hibernate=${LOGGING_LEVEL_ORG_HIBERNATE}
logging.level.com.ecommerce=${LOGGING_LEVEL_COM_ECOMMERCE}

springdoc.api-docs.path=${SPRINGDOC_API_DOCS_PATH}
springdoc.swagger-ui.path=${SPRINGDOC_SWAGGER_UI_PATH}

spring.cache.type=${CACHE_TYPE}
spring.cache.cache-names=${CACHE_NAMES}
spring.cache.caffeine.spec=${CACHE_SPEC}

# Database connection pool - GIỮ NGUYÊN
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=120000
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.leak-detection-threshold=60000

# JPA optimizations - GIỮ NGUYÊN
spring.jpa.properties.hibernate.jdbc.batch_size=30
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.query.fail_on_pagination_over_collection_fetch=false
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true
spring.jpa.properties.hibernate.default_batch_fetch_size=100
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false

spring.data.web.pageable.default-page-size=20
spring.data.web.pageable.max-page-size=100
spring.data.web.pageable.one-indexed-parameters=false

spring.jpa.open-in-view=false

# gRPC Configuration - GIỮ NGUYÊN
grpc.server.port=50053
grpc.client.inventory.host=${INVENTORY_GRPC_HOST:localhost}
grpc.client.inventory.port=${INVENTORY_GRPC_PORT:50054}

# Kafka Configuration - CẬP NHẬT
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID}
spring.kafka.consumer.auto-offset-reset=${KAFKA_CONSUMER_AUTO_OFFSET_RESET}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.retries=${KAFKA_PRODUCER_RETRIES}
spring.kafka.producer.batch-size=${KAFKA_PRODUCER_BATCH_SIZE}
spring.kafka.producer.properties.linger.ms=${KAFKA_PRODUCER_LINGER_MS}
spring.kafka.producer.buffer-memory=${KAFKA_PRODUCER_BUFFER_MEMORY}

# Kafka topics
kafka.topic.product-sales-updated=${KAFKA_TOPIC_PRODUCT_SALES_UPDATED}
kafka.topic.inventory-status-updated=${KAFKA_TOPIC_INVENTORY_STATUS_UPDATED}
kafka.topic.product-rating-updated=${KAFKA_TOPIC_PRODUCT_RATING_UPDATED}